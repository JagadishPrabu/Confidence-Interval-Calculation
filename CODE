import numpy as np
import scipy.stats as stats

def calculate_confidence_interval(data, confidence=0.95):
    """
    Calculate the confidence interval for the mean of a dataset.
    
    Parameters:
    - data (list or array): The sample data.
    - confidence (float): The confidence level (default is 0.95 for 95% confidence).
    
    Returns:
    - (mean, lower bound, upper bound) tuple of the confidence interval.
    """
    data = np.array(data)
    n = len(data)
    mean = np.mean(data)
    sem = stats.sem(data)  # Standard error of the mean
    margin = sem * stats.t.ppf((1 + confidence) / 2., n-1)  # t-distribution critical value
    
    return mean, mean - margin, mean + margin

# Example usage:
if __name__ == "__main__":
    # Sample data
    sample_data = [12, 15, 14, 10, 13, 14, 16, 15, 14, 21]
    confidence_level = 0.95

    mean, lower, upper = calculate_confidence_interval(sample_data, confidence_level)
    
    print(f"Sample Mean: {mean:.2f}")
    print(f"{int(confidence_level * 100)}% Confidence Interval: ({lower:.2f}, {upper:.2f})")
